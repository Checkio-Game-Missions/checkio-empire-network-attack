"use strict";

function capture(matrix) {
    return 0;
}

var assert = require("assert");

if (!global.is_checking) {
    // These "asserts" using only for self-checking and not necessary for auto-testing
    // Rank_01
    assert.equal(capture([
        [0, 1, 0, 1, 0, 1],
        [1, 8, 1, 0, 0, 0],
        [0, 1, 2, 0, 0, 1],
        [1, 0, 0, 1, 1, 0],
        [0, 0, 0, 1, 3, 1],
        [1, 0, 1, 0, 1, 2]]), 8, "Base example");
    assert.equal(capture([
        [0, 1, 0, 1, 0, 1],
        [1, 1, 1, 0, 0, 0],
        [0, 1, 2, 0, 0, 1],
        [1, 0, 0, 1, 1, 0],
        [0, 0, 0, 1, 3, 1],
        [1, 0, 1, 0, 1, 2]]), 4, "Low security");
    assert.equal(capture([
        [0, 1, 1],
        [1, 9, 1],
        [1, 1, 9]]), 9, "Small");

    // Rank_02
    assert.equal(capture([
        [0, 8, 1],
        [8, 1, 2],
        [1, 2, 1]]), 3, "Small2");
    assert.equal(capture([
        [0, 8, 2, 1, 1, 1, 1, 1, 1, 9],
        [8, 1, 2, 1, 1, 3, 1, 1, 1, 1],
        [2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
        [1, 1, 2, 3, 1, 1, 1, 1, 1, 1],
        [1, 1, 2, 1, 4, 1, 1, 1, 1, 1],
        [1, 3, 2, 1, 1, 5, 1, 1, 1, 1],
        [1, 1, 2, 1, 1, 1, 6, 1, 1, 1],
        [1, 1, 2, 1, 1, 1, 1, 7, 1, 1],
        [1, 1, 2, 1, 1, 1, 1, 1, 8, 7],
        [9, 1, 2, 1, 1, 1, 1, 1, 7, 9]]), 12, "89");
    console.log("Coding complete? Click 'Check' to review your tests and earn cool rewards!");
}
